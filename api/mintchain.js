require('dotenv').config(); // Na naƒç√≠tanie environment variables
const fetch = require('node-fetch'); // Na HTTP po≈æiadavky

module.exports = async function handler(req, res) {
    const now = new Date().toISOString();
    const log = (...args) => console.log(`[${now}]`, ...args);

    // Kontrola met√≥dy po≈æiadavky
    if (req.method !== "POST") {
        log("‚ùå [MINTCHAIN] Nepodporovan√° met√≥da:", req.method);
        return res.status(405).json({ error: "Method Not Allowed" });
    }

    try {
        const { metadataURI, crop_id, wallet } = req.body;

        // Kontrola vstupn√Ωch √∫dajov
        if (!metadataURI || !crop_id || !wallet) {
            log("‚ö†Ô∏è [VALID√ÅCIA] Ne√∫pln√© √∫daje:", { metadataURI, crop_id, wallet });
            return res.status(400).json({ error: "Ch√Ωbaj√∫ √∫daje" });
        }

        // Podrobn√© logy o prijat√Ωch √∫dajoch
        log("üì• [MINTCHAIN] Prijat√© √∫daje:", {
            metadataURI,
            crop_id,
            wallet
        });

        // URL, na ktor√∫ presmerujeme po≈æiadavku
        const targetURL = process.env.MINTCHAIN_API_URL; // Z√≠ska≈• URL z environment variables

        // Vytv√°rame po≈æiadavku na nov√Ω server alebo endpoint
        const response = await fetch(targetURL, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                metadataURI,
                crop_id,
                wallet
            })
        });

        const data = await response.json();

        log("‚úÖ [MINTCHAIN] Odpoveƒè z presmerovan√©ho servera:", data);

        if (response.ok) {
            return res.status(200).json({
                success: true,
                message: "Transaction sent successfully",
                result: data.result,
                metadata_cid: crop_id, // Zobrazenie crop_id ako CID
                txHash: data.txHash // Predpoklad√°me, ≈æe presmerovan√Ω server vr√°ti txHash
            });
        } else {
            return res.status(500).json({
                error: "Chyba pri presmerovan√≠ po≈æiadavky",
                details: data
            });
        }

    } catch (err) {
        log("‚ùå [MINTCHAIN ERROR]", err.message);
        return res.status(500).json({ error: err.message });
    }
};