// api/mintchain.js
module.exports = async function handler(req, res) {
    const now = new Date().toISOString();
    const log = (...args) => console.log(`[${now}]`, ...args);

    // Kontrola HTTP met√≥dy
    if (req.method !== "POST") {
        log("‚ùå [MINTCHAIN] Nepodporovan√° met√≥da:", req.method);
        return res.status(405).json({ error: "Method Not Allowed" });
    }

    try {
        const { metadataURI, crop_id, wallet } = req.body;

        log("üì• [MINTCHAIN] Prijat√© √∫daje:", {
            metadataURI,
            crop_id,
            wallet
        });

        // Overenie, ≈æe √∫daje s√∫ spr√°vne
        if (!metadataURI || !crop_id || !wallet) {
            log("‚ö†Ô∏è [MINTCHAIN] Ch√Ωbaj√∫ce √∫daje:", { metadataURI, crop_id, wallet });
            return res.status(400).json({ error: "Ch√Ωbaj√∫ √∫daje" });
        }

        // Tu je va≈°a logika mintovania, spracovania obr√°zka, z√°pisu do blockchainu atƒè.
        // Ak u≈æ m√°te integr√°ciu, m√¥≈æete spracova≈• t√∫to ƒças≈• priamo tu.

        log("üöÄ [MINTCHAIN] Proces mintovania prebieha...");
        
        // Tu m√¥≈æete vola≈• svoj smart kontrakt, pracova≈• s blockchainom a vyrobi≈• NFT
        // Za predpokladu, ≈æe pou≈æijete INFURA alebo priamo ETH klienta

        log("‚úÖ [MINTCHAIN] Transakcia vytvoren√° √∫spe≈°ne!");

        // Odpovedzeme s √∫spe≈°n√Ωm v√Ωsledkom
        return res.status(200).json({
            success: true,
            message: "NFT bolo √∫spe≈°ne mintovan√©.",
            txHash: "dummy_tx_hash" // Sem pridajte re√°lny transaction hash
        });
        
    } catch (err) {
        log("‚ùå [MINTCHAIN ERROR]", err.message);
        return res.status(500).json({ error: err.message });
    }
};